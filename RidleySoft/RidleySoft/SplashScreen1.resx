<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MainLayoutPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>